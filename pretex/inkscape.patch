diff -Naur a/src/extension/internal/pdfinput/pdf-input.cpp b/src/extension/internal/pdfinput/pdf-input.cpp
--- a/src/extension/internal/pdfinput/pdf-input.cpp	2017-02-13 18:46:57.000000000 -0500
+++ b/src/extension/internal/pdfinput/pdf-input.cpp	2017-11-15 21:05:35.501282186 -0500
@@ -768,6 +768,8 @@
         is_importvia_poppler = dlg->getImportMethod();
         // printf("PDF import via %s.\n", is_importvia_poppler ? "poppler" : "native");
 #endif
+    } else { // JDR
+        page_num = INKSCAPE.pdf_page;
     }
 
     SPDocument *doc = NULL;
diff -Naur a/src/extension/internal/pdfinput/svg-builder.cpp b/src/extension/internal/pdfinput/svg-builder.cpp
--- a/src/extension/internal/pdfinput/svg-builder.cpp	2017-02-13 18:46:57.000000000 -0500
+++ b/src/extension/internal/pdfinput/svg-builder.cpp	2017-11-15 21:05:35.525281970 -0500
@@ -1024,6 +1024,7 @@
     } else {
         _font_specification = (char*) "Arial";
     }
+    char *orig = _font_specification; // JDR
 
     // Prune the font name to get the correct font family name
     // In a PDF font names can look like this: IONIPB+MetaPlusBold-Italic
@@ -1032,6 +1033,7 @@
     char *font_style_lowercase = NULL;
     char *plus_sign = strstr(_font_specification, "+");
     if (plus_sign) {
+        *plus_sign = ' '; // JDR
         font_family = g_strdup(plus_sign + 1);
         _font_specification = plus_sign + 1;
     } else {
@@ -1045,6 +1047,7 @@
         style_delim[0] = 0;
     }
 
+#if 0 // JDR
     // Font family
     if (font->getFamily()) { // if font family is explicitly given use it.
         sp_repr_css_set_property(_font_style, "font-family", font->getFamily()->getCString());
@@ -1058,6 +1061,8 @@
             sp_repr_css_set_property(_font_style, "font-family", font_family);
         }
     }
+#endif // JDR
+    sp_repr_css_set_property(_font_style, "font-family", orig); // JDR
 
     // Font style
     if (font->isItalic()) {
@@ -1316,8 +1321,9 @@
 
                 // Set style and unref SPCSSAttr if it won't be needed anymore
                 // assume all <tspan> nodes in a <text> node share the same style
-                sp_repr_css_change(text_node, glyph.style, "style");
-                if ( glyph.style_changed && i != _glyphs.begin() ) {    // Free previous style
+                // JDR: this is a bad assumption.  Don't do that.
+                sp_repr_css_change(tspan_node, glyph.style, "style");
+                if ( glyph.style_changed && i != _glyphs.begin() && 0 ) {    // Free previous style
                     sp_repr_css_attr_unref((*prev_iterator).style);
                 }
             }
@@ -1433,8 +1439,11 @@
         new_glyph.style = _setStyle(state, has_fill, has_stroke);
         new_glyph.render_mode = render_mode;
         sp_repr_css_merge(new_glyph.style, _font_style); // Merge with font style
+        printf("Glyph: style changed; fill: %s\n", sp_repr_css_property(new_glyph.style, "fill", "???")); // DELETEME
+        std::cout << new_glyph.code << std::endl; // DELETEME
         _invalidated_style = false;
     } else {
+        printf("Glyph: style not changed\n"); // DELETEME
         new_glyph.style_changed = false;
         // Point to previous glyph's style information
         const SvgGlyph& prev_glyph = _glyphs.back();
diff -Naur a/src/inkscape.h b/src/inkscape.h
--- a/src/inkscape.h	2017-02-13 18:46:57.000000000 -0500
+++ b/src/inkscape.h	2017-11-15 21:05:36.201275900 -0500
@@ -195,6 +195,8 @@
     // may not be reflected by a selection change and thus needs a separate signal
     sigc::signal<void> signal_external_change;
 
+    gint pdf_page;  // JDR
+
 private:
     static Inkscape::Application * _S_inst;
 
diff -Naur a/src/main.cpp b/src/main.cpp
--- a/src/main.cpp	2017-02-13 18:46:57.000000000 -0500
+++ b/src/main.cpp	2017-11-15 21:05:38.301257044 -0500
@@ -167,6 +167,7 @@
     SP_ARG_EXPORT_WMF,
     SP_ARG_EXPORT_TEXT_TO_PATH,
     SP_ARG_EXPORT_IGNORE_FILTERS,
+    SP_ARG_PDF_PAGE, // JDR
     SP_ARG_EXTENSIONDIR,
     SP_ARG_QUERY_X,
     SP_ARG_QUERY_Y,
@@ -226,6 +227,7 @@
 static gboolean sp_export_text_to_path = FALSE;
 static gboolean sp_export_ignore_filters = FALSE;
 static gboolean sp_export_font = FALSE;
+static gint sp_pdf_page = 1; // JDR
 static gboolean sp_query_x = FALSE;
 static gboolean sp_query_y = FALSE;
 static gboolean sp_query_width = FALSE;
@@ -273,6 +275,7 @@
         sp_export_text_to_path = FALSE;
         sp_export_ignore_filters = FALSE;
         sp_export_font = FALSE;
+        sp_pdf_page = 1;
         sp_query_x = FALSE;
         sp_query_y = FALSE;
         sp_query_width = FALSE;
@@ -450,6 +453,12 @@
      N_("Render filtered objects without filters, instead of rasterizing (PS, EPS, PDF)"),
      NULL},
 
+    // JDR
+    {"pdf-page", 0,
+     POPT_ARG_INT, &sp_pdf_page, SP_ARG_PDF_PAGE,
+     N_("PDF page to import"),
+     N_("PAGE")},
+
     {"query-x", 'X',
      POPT_ARG_NONE, &sp_query_x, SP_ARG_QUERY_X,
      // TRANSLATORS: "--query-id" is an Inkscape command line option; see "inkscape --help"
@@ -1135,6 +1144,7 @@
 
     /// \todo FIXME BROKEN - non-UTF-8 sneaks in here.
     Inkscape::Application::create(argv[0], true);
+    INKSCAPE.pdf_page = sp_pdf_page; // JDR
 
     while (fl) {
         if (sp_file_open((gchar *)fl->data,NULL)) {
@@ -1355,6 +1365,7 @@
                         poptSetOtherOptionHelp(ctx, _("[OPTIONS...] [FILE...]\n\nAvailable options:"));
                         if ( ctx ) {
                             GSList *fl = sp_process_args(ctx);
+                            INKSCAPE.pdf_page = sp_pdf_page; // JDR
                             if (sp_process_file_list(fl)) {
                                 retval = -1;
                             }
@@ -1408,6 +1419,7 @@
     }
 
     Inkscape::Application::create(argv[0], false);
+    INKSCAPE.pdf_page = sp_pdf_page; // JDR
 
     if (sp_shell) {
         int retVal = sp_main_shell(argv[0]); // Run as interactive shell
